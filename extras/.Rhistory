# Install and load the sqldf package
install.packages('sqldf')
library(sqldf)
shinyDataFolder <- "D:/StudyResults/EPI720_2/shinyData"
databasefiles <- list.files(shinyDataFolder, pattern = "database_")
databases <- sub(".*database_*(.*?) *.rds", "\\1", databasefiles)
getComparisonSummaries <- function(database) {
comparisonSummary <- readRDS(file.path(shinyDataFolder, paste0("comparison_summary_", database, ".rds")))
comparisonSummary <- comparisonSummary[c("target_id", "comparator_id", "database_id")]
return(comparisonSummary)
}
comparisonSummaries <- lapply(databases, getComparisonSummaries)
comparisonSummaries <- do.call(rbind, comparisonSummaries)
comparisonSummaries <- comparisonSummaries[!duplicated(comparisonSummaries), ]
getCovariateSummaries <- function(database) {
covariateSummary <- readRDS(file.path(shinyDataFolder, paste0("covariate_", database, ".rds")))
return(covariateSummary)
}
covariateSummaries <- lapply(databases, getCovariateSummaries)
covariateSummaries <- do.call(rbind, covariateSummaries)
covariateSummaries <- covariateSummaries[c("covariate_id", "covariate_name")]
covariateSummaries <- covariateSummaries[!duplicated(covariateSummaries), ]
exposures <- readRDS(file.path(shinyDataFolder, paste0("exposure_of_interest_Optum.rds")))[, 1:2] # hardcoded, fix
analyses <- readRDS(file.path(shinyDataFolder, paste0("cohort_method_analysis_Optum.rds")))[, 1:2] # hardcoded, fix  (MITCH ADDED)
getCovarBalSummaries <- function(database, comparisonSummaries) { # database <- databases[1]
comparisonSummary <- comparisonSummaries[comparisonSummaries$database_id == database, ]
fullBal <- data.frame()
for (i in 1:nrow(comparisonSummary)) { # i = 1
targetId <- comparisonSummary$target_id[i]
comparatorId <- comparisonSummary$comparator_id[i]
database <- comparisonSummary$database_id[i]
bal <- readRDS(file.path(shinyDataFolder, paste0("covariate_balance_t", targetId, "_c", comparatorId, "_", database, ".rds")))
bal$covariate_analysis_id <- as.numeric(substr(bal$covariate_id, nchar(bal$covariate_id)-2, nchar(bal$covariate_id)))
bal <- bal[!bal$covariate_analysis_id %in% c(901, 902, 903, 904, 920), ] # revmove charlson, dcsi, chads2vasc, chads
fullBal <- rbind(fullBal, bal)
}
return(fullBal)
}
covarBalSummaries <- lapply(databases, getCovarBalSummaries, comparisonSummaries) # databases[c(2,8)]
covarBalSummaries <- do.call(rbind, covarBalSummaries)
covarBalSummaries$blindOriginal <- ifelse(abs(covarBalSummaries$std_diff_after) > 0.1 &
abs(pmin(covarBalSummaries$target_mean_after, 1-covarBalSummaries$target_mean_after) - pmin(covarBalSummaries$comparator_mean_after, 1-covarBalSummaries$comparator_mean_after)) > 0.05, 1, 0)
covarBalSummaries$blindStdzdiff <- ifelse(abs(covarBalSummaries$std_diff_after) > 0.1,1,0)
covarBalSummaries$blindAbsdiff <- ifelse(abs(pmin(covarBalSummaries$target_mean_after, 1-covarBalSummaries$target_mean_after) - pmin(covarBalSummaries$comparator_mean_after, 1-covarBalSummaries$comparator_mean_after)) > 0.05, 1, 0)
covarBalSummaries$blind <- ifelse(covarBalSummaries$blindStdzdiff==1 & covarBalSummaries$blindAbsdiff==1,1,0)
covarBalSummaries <- merge(covariateSummaries, covarBalSummaries)
covarBalSummaries <- merge(exposures, covarBalSummaries, by.x = "exposure_id", by.y = "comparator_id")
names(covarBalSummaries)[names(covarBalSummaries) == "exposure_name"] <- "comparator_name"
names(covarBalSummaries)[names(covarBalSummaries) == "exposure_id"] <- "comparator_id"
covarBalSummaries <- merge(exposures, covarBalSummaries, by.x = "exposure_id", by.y = "target_id")
names(covarBalSummaries)[names(covarBalSummaries) == "exposure_name"] <- "target_name"
names(covarBalSummaries)[names(covarBalSummaries) == "exposure_id"] <- "target_id"
covarBalSummaries <- merge(analyses, covarBalSummaries, by.x = "analysis_id", by.y = "analysis_id")
names(covarBalSummaries)[names(covarBalSummaries) == "description"] <- "analysis_name"
DataFolder <- "D:/StudyResults/EPI720_2/"
#covBalSummaries$comparator <- ifelse(covBalSummaries$comparator_id=13316, "[EPI_720 - C01] New users of enzalutamide with CRPC (controlled CVD in prior 6-mo)",
#                                ifelse(covBalSummaries$comparator_id=13319, "[EPI_720 - C01] New users of enzalutamide with CRPC (uncontrolled CVD in prior 6-mo)",
#                                  ifelse(covBalSummaries$comparator_id=13247,	"[EPI_720 - C01] New users of enzalutamide with CRPC (no CVD in prior 6-mo)",
#                                      ifelse(covBalSummaries$comparator_id=13246, "[EPI_720 - C01] New users of enzalutamide with CRPC (any CVD in prior 6-mo)",
#                                        ifelse(covBalSummaries$comparator_id=13245, "[EPI_720 - C01] New users of enzalutamide with CRPC", "ERROR")))))
#covarBalSummaries <- merge(analyses, covarBalSummaries, by.x = "")
# drop useless columns
#write.csv(covarBalSummaries, file.path(studyFolder, "covarBalSummaries.csv"), row.names = FALSE)
#toBlind <- covarBalSummaries[covarBalSummaries$blind == 1, ]
#blindingDecisions <- unique(covarBalSummaries[, c("database_id", "target_id", "target_name", "comparator_id", "analysis_id", "analysis_name", "comparator_name", "blind", "blindStdzdiff", "blindAbsdiff")])
covarBalSummaries$printImbalance <- ifelse(covarBalSummaries$database_id == "Optum" &
covarBalSummaries$target_id == 13186 &
covarBalSummaries$comparator_id == 13245 &
covarBalSummaries$analysis_id <= 8 &
abs(covarBalSummaries$std_diff_after) > 0.1, 1, 0)
printImbalanceSummary <- covarBalSummaries[covarBalSummaries$printImbalance == 1, ]
keepVars <- c("database_id", "covariate_name", "analysis_name", "target_mean_before", "comparator_mean_before", "std_diff_before", "target_mean_after", "comparator_mean_after", "std_diff_after")
printImbalanceDetail <- printImbalanceSummary[keepVars]
write.csv(printImbalanceDetail, file.path(studyFolder, "printImbalanceDetail.csv"), row.names = FALSE)
printImbalanceSummary <- unique(printImbalanceSummary[, c("database_id", "covariate_name")])
write.csv(printImbalanceSummary, file.path(studyFolder, "printImbalanceSummary.csv"), row.names = FALSE)
blindingDecisions <- sqldf('select database_id, target_id, target_name, comparator_id, comparator_name, analysis_id, analysis_name,
max(blind) as blind, max(blindStdzdiff) as blindStdzdiff, max(blindAbsdiff) as blindAbsdiff
from covarBalSummaries
group by database_id, target_id, target_name, comparator_id, comparator_name, analysis_id, analysis_name')
toBlind <- covarBalSummaries[covarBalSummaries$blind == 1, ]
toBlind <- unique(toBlind[, c("database_id", "target_id", "target_name", "comparator_id", "analysis_id", "comparator_name", "analysis_name", "blind")])
saveRDS(toBlind, file.path(shinyDataFolder, "to_blind.rds"))
write.csv(toBlind, file.path(studyFolder, "toBlind.csv"), row.names = FALSE)
write.csv(blindingDecisions, file.path(studyFolder, "blindingDecisions.csv"), row.names = FALSE)
covarBalSummaries
blindingDecisions <- sqldf('select database_id, target_id, target_name, comparator_id, comparator_name, outcome_id, outcome_name, analysis_id, analysis_name,
max(blind) as blind, max(blindStdzdiff) as blindStdzdiff, max(blindAbsdiff) as blindAbsdiff
from covarBalSummaries
group by database_id, target_id, target_name, comparator_id, comparator_name, outcome_id, outcome_name, analysis_id, analysis_name')
blindingDecisions
blindingDecisions <- sqldf('select database_id, target_id, target_name, comparator_id, comparator_name, outcome_id, analysis_id, analysis_name,
max(blind) as blind, max(blindStdzdiff) as blindStdzdiff, max(blindAbsdiff) as blindAbsdiff
from covarBalSummaries
group by database_id, target_id, target_name, comparator_id, comparator_name, outcome_id, analysis_id, analysis_name')
blindingDecisions
covarBalSummaries
covarBalSummaries
toBlind <- covarBalSummaries[covarBalSummaries$blind == 1, ]
toBlind <- unique(toBlind[, c("database_id", "target_id", "target_name", "comparator_id", "outcome_id" "analysis_id", "comparator_name", "analysis_name", "blind")])
toBlind <- covarBalSummaries[covarBalSummaries$blind == 1, ]
toBlind <- unique(toBlind[, c("database_id", "target_id", "target_name", "comparator_id", "outcome_id", "analysis_id", "comparator_name", "analysis_name", "blind")])
toBlind
blindingDecisions
length(blindingDecisions)
nrows(blindingDecisions)
nrow(blindingDecisions)
toBlind <- covarBalSummaries[covarBalSummaries$blind == 1, ]
toBlind <- unique(toBlind[, c("database_id", "target_id", "target_name", "comparator_id", "outcome_id", "analysis_id", "comparator_name", "analysis_name", "blind")])
toBlind
unBlindCheck <- covarBalSummaries[covarBalSummaries$blind != 1 & covarBalSummaries$std_diff_after > 0.1, ]
unBlind <- unique(unBlindCheck[, c("covariate_name", "database_id", "target_id", "target_name", "comparator_id", "outcome_id", "analysis_id", "comparator_name", "analysis_name", "blind")])
unBlind
unBlind <- unique(unBlindCheck[, c("covariate_name")])
unBlind
unBlind
write.csv(unBlind, file.path(studyFolder, "unBlind.csv"), row.names = FALSE)
shinyDataFolder <- "D:/StudyResults/EPI720_2/shinyData"
studyFolder <- "D:/StudyResults/EPI720_2"
write.csv(unBlind, file.path(studyFolder, "unBlind.csv"), row.names = FALSE)
unBlindCheck <- covarBalSummaries[covarBalSummaries$blindStdzdiff==1 & covarBalSummaries$blindAbsdiff != 1, ]
unBlind <- unique(unBlindCheck[, c("covariate_name")])
unBlind
write.csv(unBlind, file.path(studyFolder, "unBlind.csv"), row.names = FALSE)
unBlind <- unique(unBlindCheck[, c("covariate_name")])
write.csv(unBlind, file.path(studyFolder, "unBlind.csv"), row.names = FALSE)
unBlind$covariate_string <-gsub(".*:","",covariate_name)
unBlind$covariate_string <-gsub(".*:","",unBlind$covariate_name)
unBlind$covariate_name
unBlind
typeof(unBlind)
unBlindCheck$covariate_name
unBlindCheck$covariate_name_clipped <-gsub(".*:","",unBlindCheck$covariate_name)
unBlindCheck$covariateNameclipped <-gsub(".*:","",unBlindCheck$covariate_name)
unBlindCheck <- covarBalSummaries[covarBalSummaries$blindStdzdiff==1 & covarBalSummaries$blindAbsdiff != 1, ]
unBlindCheck$covariateNameclipped <-gsub(".*:","",unBlindCheck$covariate_name)
unBlind <- unique(unBlindCheck[, c("covariateNameclipped")])
unBlind
unBlindCheck <- covarBalSummaries[covarBalSummaries$blindStdzdiff==1 & covarBalSummaries$blindAbsdiff != 1, ]
unBlindCheck$covariateNameclipped <-gsub(".*:","",unBlindCheck$covariate_name)
unBlindCheck <- unBlindCheck[order(covariateNameclipped),]
unBlind <- unique(unBlindCheck[, c("covariateNameclipped")])
unBlindCheck <- covarBalSummaries[covarBalSummaries$blindStdzdiff==1 & covarBalSummaries$blindAbsdiff != 1, ]
unBlindCheck$covariateNameclipped <-gsub(".*:","",unBlindCheck$covariate_name)
unBlindCheck <- unBlindCheck[order(unBlindCheck$covariateNameclipped),]
unBlind <- unique(unBlindCheck[, c("covariateNameclipped")])
unBlind
write.csv(unBlind, file.path(studyFolder, "unBlind.csv"), row.names = FALSE)
covarBalSummaries
unBlindTESET$covariateNameclipped <-gsub(".*:","",covarBalSummaries$covariate_name)
unBlindTESET <- unBlindTESET[order(unBlindTESET$covariateNameclipped),]
unBlindTESET <- unique(unBlindTESET[, c("covariateNameclipped")])
unBlindTESET$covariateNameclipped <- gsub(".*:","",covarBalSummaries$covariate_name)
unBlindTEST <- covarBalSummaries
unBlindTEST$covariateNameclipped <- gsub(".*:","",covarBalSummaries$covariate_name)
unBlindTEST <- unBlindTESET[order(unBlindTESET$covariateNameclipped),]
unBlindTEST <- unique(unBlindTESET[, c("covariateNameclipped")])
unBlindTEST <- covarBalSummaries
unBlindTEST$covariateNameclipped <- gsub(".*:","",covarBalSummaries$covariate_name)
unBlindTEST <- unBlindTEST[order(unBlindTEST$covariateNameclipped),]
unBlindTEST <- unique(unBlindTEST[, c("covariateNameclipped")])
unBlindCheck <- covarBalSummaries[covarBalSummaries$blindStdzdiff==1 & covarBalSummaries$blindAbsdiff == 0, ]
unBlindCheck$covariateNameclipped <-gsub(".*:","",unBlindCheck$covariate_name)
unBlindCheck <- unBlindCheck[order(unBlindCheck$covariateNameclipped),]
unBlind <- unique(unBlindCheck[, c("covariateNameclipped")])
class(toBlind)
toUnblind <- covarBalSummaries[covarBalSummaries$blind != 1, ]
toUnblind <- unique(toUnblind[, c("database_id", "target_id", "target_name", "comparator_id", "outcome_id", "analysis_id", "comparator_name", "analysis_name", "blind")])
toBlind <- covarBalSummaries[covarBalSummaries$blind == 1, ]
toUnblind <- covarBalSummaries[covarBalSummaries$blind != 1, ]
toBlind <- blindingDecisions[blindingDecisions$blind == 1, ]
toUnblind <- blindingDecisions[blindingDecisions$blind != 1, ]
toBlind <- unique(toBlind[, c("database_id", "target_id", "target_name", "comparator_id", "outcome_id", "analysis_id", "comparator_name", "analysis_name", "blind")])
toBlind <- covarBalSummaries[covarBalSummaries$blind == 1, ]
toBlind <- unique(toBlind[, c("database_id", "target_id", "target_name", "comparator_id", "outcome_id", "analysis_id", "comparator_name", "analysis_name", "blind")])
blindingDecisions <- sqldf('select database_id, target_id, target_name, comparator_id, comparator_name, outcome_id, analysis_id, analysis_name,
max(blind) as blind, max(blindStdzdiff) as blindStdzdiff, max(blindAbsdiff) as blindAbsdiff
from covarBalSummaries
group by database_id, target_id, target_name, comparator_id, comparator_name, outcome_id, analysis_id, analysis_name')
toBlind <- covarBalSummaries[covarBalSummaries$blind == 1, ]
toBlind <- unique(toBlind[, c("database_id", "target_id", "target_name", "comparator_id", "outcome_id", "analysis_id", "comparator_name", "analysis_name", "blind")])
toUnblind <- blindingDecisions[blindingDecisions$blind != 1, ]
toUnblindCheck <- sqldf('select a.*,
b.covariate_name, b.blind as cov_blind, b.blindStdzdiff as cov_blindStdzdiff, b.blindAbsdiff as cov_blindAbsdiff
from (select * from toUnblind) as a left join covarBalSummaries as b
on a.database_id=b.a.database_id,
a.target_id=b.a.target_id,
a.target_name=b.a.target_name,
a.comparator_id=b.a.comparator_id,
a.comparator_name=b.a.comparator_name,
a.outcome_id=b.a.outcome_id,
a.analysis_id=b.a.analysis_id,
a.analysis_name=b.a.analysis_name')
toUnblindCheck <- sqldf('select a.*,
b.covariate_name, b.blind as cov_blind, b.blindStdzdiff as cov_blindStdzdiff, b.blindAbsdiff as cov_blindAbsdiff
from (select * from toUnblind) as a left join covarBalSummaries as b
on a.database_id=b.a.database_id &
a.target_id=b.a.target_id &
a.target_name=b.a.target_name &
a.comparator_id=b.a.comparator_id &
a.comparator_name=b.a.comparator_name &
a.outcome_id=b.a.outcome_id &
a.analysis_id=b.a.analysis_id &
a.analysis_name=b.a.analysis_name')
toUnblindCheck <- sqldf('select a.*,
b.covariate_name, b.blind as cov_blind, b.blindStdzdiff as cov_blindStdzdiff, b.blindAbsdiff as cov_blindAbsdiff
from toUnblind as a left join covarBalSummaries as b
on a.database_id=b.database_id &
a.target_id=b.target_id &
a.target_name=b.target_name &
a.comparator_id=b.comparator_id &
a.comparator_name=b.comparator_name &
a.outcome_id=b.outcome_id &
a.analysis_id=b.analysis_id &
a.analysis_name=b.analysis_name')
# a.database_id, a.target_id, a.target_name, a.comparator_id, a.comparator_name, a.outcome_id, a.analysis_id, a.analysis_name
# b.blind AS blind_analysis, b.blindStdzdiff_analysis, b.blindAbsdiff_analysis
unBlindCheck <- toUnblindCheck[toUnblindCheck$cov_blindStdzdiff==1 & covarBalSummaries$cov_blindAbsdiff == 0, ]
unBlindCheck$covariateNameclipped <-gsub(".*:","",unBlindCheck$covariate_name)
unBlindCheck <- unBlindCheck[order(unBlindCheck$covariateNameclipped),]
unBlind <- unique(unBlindCheck[, c("covariateNameclipped")])
unBlind
toUnblindCheck
toUnblindCheck <- sqldf('select a.*,
b.covariate_name, b.blind as cov_blind, b.blindStdzdiff as cov_blindStdzdiff, b.blindAbsdiff as cov_blindAbsdiff
from toUnblind as a left join covarBalSummaries as b
on a.database_id=b.database_id ')
toUnblindCheck <- sqldf('select a.*,
b.covariate_name, b.blind as cov_blind, b.blindStdzdiff as cov_blindStdzdiff, b.blindAbsdiff as cov_blindAbsdiff
from toUnblind as a left join covarBalSummaries as b
on a.database_id=b.database_id &
a.target_id=b.target_id &
a.target_name=b.target_name &
a.comparator_id=b.comparator_id &
a.comparator_name=b.comparator_name &
a.outcome_id=b.outcome_id &
a.analysis_id=b.analysis_id &
a.analysis_name=b.analysis_name')
toUnblindCheck
toUnblindCheck <- sqldf('select a.*,
b.covariate_name, b.blind as cov_blind, b.blindStdzdiff as cov_blindStdzdiff, b.blindAbsdiff as cov_blindAbsdiff
from toUnblind as a join covarBalSummaries as b
on a.database_id=b.database_id &
a.target_id=b.target_id &
a.target_name=b.target_name &
a.comparator_id=b.comparator_id &
a.comparator_name=b.comparator_name &
a.outcome_id=b.outcome_id &
a.analysis_id=b.analysis_id &
a.analysis_name=b.analysis_name')
toUnblindCheck <- sqldf('select a.*,
b.covariate_name, b.blind as cov_blind, b.blindStdzdiff as cov_blindStdzdiff, b.blindAbsdiff as cov_blindAbsdiff
from toUnblind as a join covarBalSummaries as b
on (a.database_id=b.database_id and
a.target_id=b.target_id and
a.target_name=b.target_name and
a.comparator_id=b.comparator_id and
a.comparator_name=b.comparator_name and
a.outcome_id=b.outcome_id and
a.analysis_id=b.analysis_id and
a.analysis_name=b.analysis_name)')
blindingDecisionsTEST <- sqldf('select database_id, target_id, target_name, comparator_id, comparator_name, outcome_id, analysis_id, analysis_name,
blind as cov_blind, blindStdzdiff as cov_blindStdzdiff, blindAbsdiff as cov_blindAbsdiff,
max(blind) as blind, max(blindStdzdiff) as blindStdzdiff, max(blindAbsdiff) as blindAbsdiff
from covarBalSummaries
group by database_id, target_id, target_name, comparator_id, comparator_name, outcome_id, analysis_id, analysis_name')
blindingDecisionsTEST
unBlindCheck <- blindingDecisionsTEST[blindingDecisionsTEST$cov_blindStdzdiff==1 & covarBalSummaries$cov_blindAbsdiff == 0, ]
unBlindCheck$covariateNameclipped <-gsub(".*:","",unBlindCheck$covariate_name)
unBlindCheck <- unBlindCheck[order(unBlindCheck$covariateNameclipped),]
unBlind <- unique(unBlindCheck[, c("covariateNameclipped")])
unBlind
unBlindCheck <- blindingDecisionsTEST[blindingDecisionsTEST$cov_blindStdzdiff==1 & blindingDecisionsTEST$cov_blindAbsdiff == 0, ]
unBlindCheck$covariateNameclipped <-gsub(".*:","",unBlindCheck$covariate_name)
unBlindCheck <- unBlindCheck[order(unBlindCheck$covariateNameclipped),]
unBlind <- unique(unBlindCheck[, c("covariateNameclipped")])
blindingDecisionsTEST
blindingDecisionsTEST <- sqldf('select database_id, target_id, target_name, comparator_id, comparator_name, outcome_id, analysis_id, analysis_name,
blind as cov_blind, blindStdzdiff as cov_blindStdzdiff, blindAbsdiff as cov_blindAbsdiff, covariate_name,
max(blind) as blind, max(blindStdzdiff) as blindStdzdiff, max(blindAbsdiff) as blindAbsdiff
from covarBalSummaries
group by database_id, target_id, target_name, comparator_id, comparator_name, outcome_id, analysis_id, analysis_name')
blindingDecisionsTEST <- sqldf('select database_id, target_id, target_name, comparator_id, comparator_name, outcome_id, analysis_id, analysis_name,
covariate_name, blind as cov_blind, blindStdzdiff as cov_blindStdzdiff, blindAbsdiff as cov_blindAbsdiff,
max(blind) as blind, max(blindStdzdiff) as blindStdzdiff, max(blindAbsdiff) as blindAbsdiff
from covarBalSummaries
group by database_id, target_id, target_name, comparator_id, comparator_name, outcome_id, analysis_id, analysis_name')
blindingDecisionsTEST <- sqldf('a.*, b.* from
(select database_id, target_id, target_name, comparator_id, comparator_name, outcome_id, analysis_id, analysis_name,
max(blind) as blind, max(blindStdzdiff) as blindStdzdiff, max(blindAbsdiff) as blindAbsdiff
from covarBalSummaries
group by database_id, target_id, target_name, comparator_id, comparator_name, outcome_id, analysis_id, analysis_name) as a
left join
(select covariate_name, blind as cov_blind, blindStdzdiff as cov_blindStdzdiff, blindAbsdiff as cov_blindAbsdiff from covarBalSummaries) as b
on (a.database_id=b.database_id and
a.target_id=b.target_id and
a.target_name=b.target_name and
a.comparator_id=b.comparator_id and
a.comparator_name=b.comparator_name and
a.outcome_id=b.outcome_id and
a.analysis_id=b.analysis_id and
a.analysis_name=b.analysis_name)')
blindingDecisionsTEST <- sqldf('a.*, b.covariate_name, b.blind as cov_blind, b.blindStdzdiff as cov_blindStdzdiff, b.blindAbsdiff as cov_blindAbsdiff
from
(select database_id, target_id, target_name, comparator_id, comparator_name, outcome_id, analysis_id, analysis_name,
max(blind) as blind, max(blindStdzdiff) as blindStdzdiff, max(blindAbsdiff) as blindAbsdiff
from covarBalSummaries
group by database_id, target_id, target_name, comparator_id, comparator_name, outcome_id, analysis_id, analysis_name) as a
left join covarBalSummaries as b
on (a.database_id=b.database_id and
a.target_id=b.target_id and
a.target_name=b.target_name and
a.comparator_id=b.comparator_id and
a.comparator_name=b.comparator_name and
a.outcome_id=b.outcome_id and
a.analysis_id=b.analysis_id and
a.analysis_name=b.analysis_name)')
blindingDecisionsTEST <- sqldf('a.*, b.covariate_name as covariate_name, b.blind as cov_blind, b.blindStdzdiff as cov_blindStdzdiff, b.blindAbsdiff as cov_blindAbsdiff
from
(select database_id, target_id, target_name, comparator_id, comparator_name, outcome_id, analysis_id, analysis_name,
max(blind) as blind, max(blindStdzdiff) as blindStdzdiff, max(blindAbsdiff) as blindAbsdiff
from covarBalSummaries
group by database_id, target_id, target_name, comparator_id, comparator_name, outcome_id, analysis_id, analysis_name) as a
left join covarBalSummaries as b
on (a.database_id=b.database_id and
a.target_id=b.target_id and
a.target_name=b.target_name and
a.comparator_id=b.comparator_id and
a.comparator_name=b.comparator_name and
a.outcome_id=b.outcome_id and
a.analysis_id=b.analysis_id and
a.analysis_name=b.analysis_name)')
toUnblindCheck <- sqldf('select a.database_id, a.target_id, a.target_name, a.comparator_id, a.comparator_name, a.outcome_id, a.analysis_id, a.analysis_name
a.blind, a.blindStdzdiff, a.blindAbsdiff,
b.covariate_name, b.blind as cov_blind, b.blindStdzdiff as cov_blindStdzdiff, b.blindAbsdiff as cov_blindAbsdiff
from toUnblind as a join covarBalSummaries as b
on (a.database_id=b.database_id and
a.target_id=b.target_id and
a.target_name=b.target_name and
a.comparator_id=b.comparator_id and
a.comparator_name=b.comparator_name and
a.outcome_id=b.outcome_id and
a.analysis_id=b.analysis_id and
a.analysis_name=b.analysis_name)')
toUnblindCheck <- sqldf('select a.database_id, a.target_id, a.target_name, a.comparator_id, a.comparator_name, a.outcome_id, a.analysis_id, a.analysis_name,
a.blind, a.blindStdzdiff, a.blindAbsdiff,
b.covariate_name, b.blind as cov_blind, b.blindStdzdiff as cov_blindStdzdiff, b.blindAbsdiff as cov_blindAbsdiff
from toUnblind as a left join covarBalSummaries as b
on (a.database_id=b.database_id and
a.target_id=b.target_id and
a.target_name=b.target_name and
a.comparator_id=b.comparator_id and
a.comparator_name=b.comparator_name and
a.outcome_id=b.outcome_id and
a.analysis_id=b.analysis_id and
a.analysis_name=b.analysis_name)')
toUnblindCheck
View(toUnblindCheck)
min(toUnblindCheck$blind)
max(toUnblindCheck$blind)
min(toUnblindCheck$cov_blind)
max(toUnblindCheck$cov_blind)
min(toUnblindCheck$blind)
max(toUnblindCheck$blind)
min(toUnblindCheck$cov_blind)
max(toUnblindCheck$cov_blind)
max(toUnblind$blind)
max(toUnblind$blind)
max(toUnblindCheck$blind)
max(toUnblind$blind)
max(covarBalSummaries$blind)
min(toUnblindCheck$cov_blind)
max(toUnblindCheck$cov_blind)
min(toUnblindCheck$cov_blind)
max(toUnblindCheck$cov_blind)
min(toUnblindCheck$blind)
max(toUnblindCheck$blind)
min(toUnblindCheck$blindStdzdiff)
max(toUnblindCheck$blindStdzdiff)
min(toUnblindCheck$blindAbsdiff)
max(toUnblindCheck$blindAbsdiff)
min(covarBalSummaries$blind)
max(covarBalSummaries$blind)
min(covarBalSummaries$blindStdzdiff)
max(covarBalSummaries$blindStdzdiff)
min(covarBalSummaries$blindAbsdiff)
max(covarBalSummaries$blindAbsdiff)
unBlindCheck <- blindingDecisionsTEST[blindingDecisionsTEST$cov_blindStdzdiff==1 & blindingDecisionsTEST$cov_blindAbsdiff == 0, ]
unBlindCheck$covariateNameclipped <-gsub(".*:","",unBlindCheck$covariate_name)
unBlindCheck <- unBlindCheck[order(unBlindCheck$covariateNameclipped),]
unBlind <- unique(unBlindCheck[, c("covariateNameclipped")])
unBlind <- unique(unBlindCheck[, c("covariateNameclipped")])
unBlind
blindingDecisionsTEST
unBlindCheck <- toUnblindCheck[toUnblindCheck$cov_blindStdzdiff==1 & toUnblindCheck$cov_blindAbsdiff == 0, ]
unBlindCheck$covariateNameclipped <-gsub(".*:","",unBlindCheck$covariate_name)
unBlindCheck <- unBlindCheck[order(unBlindCheck$covariateNameclipped),]
unBlind <- unique(unBlindCheck[, c("covariateNameclipped")])
unBlind
unBlindCheck <- toUnblindCheck[toUnblindCheck$cov_blindStdzdiff==1 & toUnblindCheck$cov_blindAbsdiff == 0, ]
unBlindCheck$covariateNameclipped <-gsub(".*:","",unBlindCheck$covariate_name)
unBlindCheck <- unBlindCheck[order(unBlindCheck$covariateNameclipped),]
unBlind <- unique(unBlindCheck[, c("covariateNameclipped")])
write.csv(unBlind, file.path(studyFolder, "unBlind.csv"), row.names = FALSE)
